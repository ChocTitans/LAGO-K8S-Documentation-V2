apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/service: api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/network: lago-default
        app.kubernetes.io/service: api
    spec:
      containers:
        - args:
            - ./scripts/start.sh
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: lago-secret
                  key: DATABASE_URL
            - name: ENCRYPTION_DETERMINISTIC_KEY
              value: ${LAGO_ENCRYPTION_DETERMINISTIC_KEY:-your-encrpytion-deterministic-key}
            - name: ENCRYPTION_KEY_DERIVATION_SALT
              value: ${LAGO_ENCRYPTION_KEY_DERIVATION_SALT:-your-encrpytion-derivation-salt}
            - name: ENCRYPTION_PRIMARY_KEY
              value: ${LAGO_ENCRYPTION_PRIMARY_KEY:-your-encrpytion-primary-key}
            - name: LAGO_API_URL
              value: http://localhost:3000
            - name: LAGO_AWS_S3_ACCESS_KEY_ID
              value: ${LAGO_AWS_S3_ACCESS_KEY_ID:-azerty123456}
            - name: LAGO_AWS_S3_BUCKET
              value: ${LAGO_AWS_S3_BUCKET:-bucket}
            - name: LAGO_AWS_S3_ENDPOINT
              value: ${LAGO_AWS_S3_ENDPOINT}
            - name: LAGO_AWS_S3_REGION
              value: ${LAGO_AWS_S3_REGION:-us-east-1}
            - name: LAGO_AWS_S3_SECRET_ACCESS_KEY
              value: ${LAGO_AWS_S3_SECRET_ACCESS_KEY:-azerty123456}
            - name: LAGO_DISABLE_SEGMENT
              value: ${LAGO_DISABLE_SEGMENT}
            - name: LAGO_FRONT_URL
              value: http://localhost
            - name: LAGO_GCS_BUCKET
              value: ${LAGO_GCS_BUCKET:-}
            - name: LAGO_GCS_PROJECT
              value: ${LAGO_GCS_PROJECT:-}
            - name: LAGO_OAUTH_PROXY_URL
              value: https://proxy.getlago.com
            - name: LAGO_PDF_URL
              value: http://pdf:3000
            - name: LAGO_REDIS_CACHE_PASSWORD
              value: ${LAGO_REDIS_CACHE_PASSWORD}
            - name: LAGO_REDIS_CACHE_URL
              value: redis://redis:6379
            - name: LAGO_RSA_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: lago-secret
                  key: API_SECRET
            - name: LAGO_SIDEKIQ_WEB
              value: ${LAGO_SIDEKIQ_WEB}
            - name: LAGO_USE_AWS_S3
              value: "false"
            - name: LAGO_USE_GCS
              value: "false"
            - name: RAILS_ENV
              value: production
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: REDIS_PASSWORD
              value: ${REDIS_PASSWORD}
            - name: REDIS_URL
              value: redis://redis:6379
            - name: RSA_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: lago-secret
                  key: API_SECRET
            - name: SECRET_KEY_BASE
              value: ${SECRET_KEY_BASE:-your-secret-key-base-hex-64}
          image: getlago/api:v0.40.0-beta
          name: lago-api
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /app/storage
              name: lago-storage-data
      restartPolicy: Always
      volumes:
        - name: lago-storage-data
          persistentVolumeClaim:
            claimName: lago-storage-data
